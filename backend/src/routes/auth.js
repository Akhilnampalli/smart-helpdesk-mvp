import { Router } from 'express'; import bcrypt from 'bcryptjs'; import jwt from 'jsonwebtoken'; import User from '../models/User.js';
const router=Router();
router.post('/register',async(req,res)=>{const {email,password,name}=req.body; const passwordHash=await bcrypt.hash(password,10); const user=await User.create({email,passwordHash,name,role:'user'}); res.json({id:user._id});});
router.post('/login',async(req,res)=>{const {email,password}=req.body; const user=await User.findOne({email}); if(!user) return res.status(401).json({error:'Invalid'}); const ok=await bcrypt.compare(password,user.passwordHash); if(!ok) return res.status(401).json({error:'Invalid'}); const token=jwt.sign({sub:user._id,role:user.role,email:user.email},process.env.JWT_SECRET||'devsecret',{expiresIn:'1d'}); res.json({token,role:user.role,email:user.email,name:user.name});});
export default router;